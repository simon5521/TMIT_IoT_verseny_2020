package traffic
import "Interfaces"
import "BasicTraffic.gcd"
environment TrafficComp[
	port cars:provides Stream
]{
	periodic source TrafficSim [port car_out :provides Traffic] 
		with Dirac source = Python(
			'
import os, sys

#tools = os.path.join("/usr/share/sumo", "tools")
tools = os.path.join(r"C:\\Users\\simon5521\\Programs\\Sumo", "tools")
sys.path.append(tools)
import traci


#speed of the simulation
sim_speed=40.0 #sim_step/sec
sim_time=120.0
#location of the sinulation configuration files
#sim_loc="Clark_Adam_scenario1/"
sim_loc=r"ClarkAdamScenario\\\\"

print("starting sumo gui")
sumoBinary = "sumo-gui"
sumoCmd = [sumoBinary, "-c",sim_loc+"osm.sumocfg"]
traci.start(sumoCmd)
print("sumo gui has been started")

print("starting the simulation")

# warming up the simulation (because the simulation start without car)
traci.simulationStep(600)
step=0
time=0.0
data=[]

while step<int(sim_time*sim_speed) :
        step=step+1
        time=step*1.0/sim_speed

        #execute a simulation step
        traci.simulationStep()

        if traci.lanearea.getLastStepVehicleNumber("Camera1")>0:
            data.append(time)

        if traci.lanearea.getLastStepVehicleNumber("Camera2")>0:
            data.append(time)

print("Data:",data)

traci.close()

self.points=data

'			
		)
		
		component basic:BasicTraffic
		
		channel [TrafficSim.car_out] -o)- [basic.InPort]
		
		bind cars->basic.OutPort
		
}

analysis Traffic_basic_analysis{
	in environment component traf:TrafficComp 
	frequency of event [traf.cars.NewData]
}