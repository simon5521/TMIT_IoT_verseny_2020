package LPRecQueueManager
import "Interfaces"
@PrioritizedTransitions = order-based
statechart LPRecQueueManagerStatechart [
	port Status : provides Status
	port ProcessedImg : requires Stream
	port PreProcessedImgOut : provides Stream
	port PreProcessedImg : requires Stream
	port NetworkStream : provides Stream
] {
	var QueueLen : integer := 0
	var QueueMaxLen : integer := 4
	transition from Choice1 to Full [QueueLen = QueueMaxLen]
	transition from Choice1 to NotFull [else]
	transition from Entry0 to NotFull
	transition from Full to NotFull when ProcessedImg.NewData / QueueLen := QueueLen - 1; raise
		NetworkStream.NewData;
	transition from NotFull to Choice1 when PreProcessedImg.NewData / QueueLen := QueueLen + 1; raise
		PreProcessedImgOut.NewData;
	transition from NotFull to NotFull when ProcessedImg.NewData / QueueLen := QueueLen - 1; raise
		NetworkStream.NewData;
	region main_region {
		initial Entry0
		state NotFull {
			entry / raise Status.Free;
		}
		state Full {
			entry / raise Status.Full;
		}
		choice Choice1
	}
}