package epas1
import "mainctrl/Mainctrl.gcd"
import "interfaces/Interfaces.gcd"
import "sensor/Sensor.gcd"
import "uC/UC.gcd"
import "evaluation/Evaluation.gcd"
cascade epas [
	port State: provides Eval
	port S1AFault: requires SensorFault
	port S2AFault: requires SensorFault
	port S3AFault: requires SensorFault
	port S1BFault: requires SensorFault
	port S2BFault: requires SensorFault
	port S3BFault: requires SensorFault
	port UCAFault: requires UCFault
	port UCBFault: requires UCFault
	
] {
	component S1A: Sensor
	component S2A: Sensor
	component S3A: Sensor
	
	component S1B: Sensor
	component S2B: Sensor
	component S3B: Sensor
	
	component UCA: UC
	component UCB: UC
	
	component ACTRL: Mainctrl
	component BCTRL: Mainctrl
	
	component Ev: Evaluation
	
	bind S1AFault->S1A.HWFault
	bind S2AFault->S2A.HWFault
	bind S3AFault->S3A.HWFault
	
	bind S1BFault->S1B.HWFault
	bind S2BFault->S2B.HWFault
	bind S3BFault->S3B.HWFault
	
	bind UCAFault->UCA.HWFault
	bind UCBFault->UCB.HWFault
	
	bind State->Ev.Eval
	
	channel [S1A.SensorFault] -o)- [ACTRL.S1HW]
	channel [S2A.SensorFault] -o)- [ACTRL.S2HW]
	channel [S3A.SensorFault] -o)- [ACTRL.S3HW]
	
	channel [S1B.SensorFault] -o)- [BCTRL.S1HW]
	channel [S2B.SensorFault] -o)- [BCTRL.S2HW]
	channel [S3B.SensorFault] -o)- [BCTRL.S3HW]
	
	channel [UCA.Fault] -o)- [ACTRL.UCHW]
	channel [UCB.Fault] -o)- [BCTRL.UCHW]
	
	channel [ACTRL.Monitor] -o)- [Ev.AMonitor]
	channel [BCTRL.Monitor] -o)- [Ev.BMonitor]
	
}